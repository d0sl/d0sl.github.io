<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math foundation on d0sl semantic platform</title>
    <link>https://d0sl.org/en/math-foundation/</link>
    <description>Recent content in Math foundation on d0sl semantic platform</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright¬© by [d0sl](https://d0sl.org) Group</copyright>
    <lastBuildDate>Fri, 28 Dec 2018 11:02:05 +0700</lastBuildDate><atom:link href="https://d0sl.org/en/math-foundation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://d0sl.org/en/math-foundation/articles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d0sl.org/en/math-foundation/articles/</guid>
      <description>Mathematical foundations of semantic programming/modelling  Goncharov S.S., Ershov Yu.L., Sviridenko D.I. Methodology aspects of the semantic programming // Scientific knowledge: logic, notions, structure. ‚Äì Novosibirsk, Nauka 1987, pp. 154-184. S.S. Goncharov, D.I. Sviridenko Mathematical Foundations of Semantic Programming Paper.Academy of Science of USSR.&amp;ndash;1986.&amp;ndash; T.289,No 6 S.S. Goncharov, D.I. Sviridenko Œ£-Programming Amer. Math. Soc. Transl. (2) Vol. 142, 1989. Available online: [https://goo.gl/QcocUc] (https://goo.gl/QcocUc) D.I. Sviridenko Introduction into Semantic Smart Contracts [https://goo.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://d0sl.org/en/math-foundation/delta0_math_def/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://d0sl.org/en/math-foundation/delta0_math_def/</guid>
      <description>Mathematical definition of \(\Delta_0\)-formulas Definition
 If \(P \) is a predicate symbol, \(P \in \sigma \), and \( ùë°_1,&amp;hellip;,t_n \) are symbols of constants of the signature \(\sigma\), or variables, then \( P(ùë°_1,&amp;hellip;,t_n)\) is a \(\Delta_0 \)-formula. If \( \phi \) and \( \psi \) are \( \Delta_0 \)-formulas, then \( \phi \wedge \psi, \phi \vee \psi , \phi \rightarrow \psi, \neg \psi \) are \( \Delta_0 \)-formulas. If \( \phi \) is a \( \Delta_0 \)-formula, ùë• is a variable, and ùëô is a finite list, then \( (\forall x \in l)\phi (x) \) and \( (\exists x \in l)\phi (x) \) are \( \Delta_0 \)-formulas.</description>
    </item>
    
  </channel>
</rss>
